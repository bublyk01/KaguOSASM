label startTest

// Test case 1: check that 0 incremented by 1 is 1
    write "0 incremented by 1 is 1" to var:testName
    write "0" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "1" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 2: check that 1 incremented by 1 is 2
    write "1 incremented by 1 is 2" to var:testName
    write "1" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "2" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 3: check that -1 incremented by 1 is 0
    write "-1 incremented by 1 is 0" to var:testName
    write "-1" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "0" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 4: check that 10 incremented by 1 is 11
    write "10 incremented by 1 is 11" to var:testName
    write "10" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "11" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 5: check that 5.5 incremented by 1 is 6.5
    write "5.5 incremented by 1 is 6.5" to var:testName
    write "5.5" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "6.5" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 6: check that -3 incremented by 1 is -2
    write "-3 incremented by 1 is -2" to var:testName
    write "-3" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "-2" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 7: check that 0.1 incremented by 1 is 1.1
    write "0.1 incremented by 1 is 1.1" to var:testName
    write "0.1" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "1.1" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 8: check that -0.5 incremented by 1 is 0.5
    write "-0.5 incremented by 1 is 0.5" to var:testName
    write "-0.5" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "0.5" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 9: check that 9999999 incremented by 1 is 10000000
    write "9999999 incremented by 1 is 10000000" to var:testName
    write "9999999" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "10000000" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Test case 10: check that -9999999 incremented by 1 is -9999998
    write "-9999999 incremented by 1 is -9999998" to var:testName
    write "-9999999" to REG_A
    write OP_INCR to REG_OP
    cpu_exec

    copy REG_RES to var:actual
    write "-9999998" to var:expected

    copy PROGRAM_COUNTER to var:nextTestAddress
    jump label:check

// Exit:
jump label:exit
